-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.branches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  branch_code character varying UNIQUE,
  email character varying,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  country character varying DEFAULT 'Uganda'::character varying,
  timezone character varying DEFAULT 'Africa/Kampala'::character varying,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying]::text[])),
  branch_type character varying DEFAULT 'retail'::character varying CHECK (branch_type::text = ANY (ARRAY['retail'::character varying, 'wholesale'::character varying, 'hospital'::character varying, 'clinic'::character varying]::text[])),
  operating_hours jsonb,
  manager_id uuid,
  contact_person character varying,
  contact_phone character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  tenant_id uuid NOT NULL,
  license_number character varying,
  CONSTRAINT branches_pkey PRIMARY KEY (id),
  CONSTRAINT branches_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES public.users(id),
  CONSTRAINT branches_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_branches_manager_id FOREIGN KEY (manager_id) REFERENCES public.users(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  color character varying DEFAULT '#3B82F6'::character varying,
  icon character varying,
  parent_id uuid,
  sort_order integer DEFAULT 0,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying::text, 'inactive'::character varying::text, 'archived'::character varying::text])),
  is_system boolean DEFAULT false,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id),
  CONSTRAINT categories_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT categories_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT categories_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  email character varying,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  country character varying DEFAULT 'Uganda'::character varying,
  date_of_birth date,
  gender character varying CHECK (gender::text = ANY (ARRAY['male'::character varying, 'female'::character varying]::text[])),
  registration_date date NOT NULL DEFAULT CURRENT_DATE,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'blocked'::character varying]::text[])),
  total_purchases integer DEFAULT 0,
  total_spent integer DEFAULT 0,
  last_purchase_date date,
  loyalty_points integer DEFAULT 0,
  notes text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT customers_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT customers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_customers_created_by FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['info'::character varying, 'warning'::character varying, 'error'::character varying, 'success'::character varying, 'low_stock'::character varying, 'expiry'::character varying, 'sale'::character varying, 'system'::character varying]::text[])),
  title character varying NOT NULL,
  message text NOT NULL,
  priority character varying DEFAULT 'normal'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'normal'::character varying, 'high'::character varying, 'urgent'::character varying]::text[])),
  is_read boolean DEFAULT false,
  data jsonb DEFAULT '{}'::jsonb,
  action_url character varying,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  name character varying NOT NULL,
  manufacturer_name character varying,
  description text,
  price integer NOT NULL DEFAULT 0,
  cost_price integer NOT NULL DEFAULT 0,
  quantity integer NOT NULL DEFAULT 0,
  min_stock_level integer NOT NULL DEFAULT 10,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'discontinued'::character varying]::text[])),
  manufacturer character varying,
  expiry_date date,
  batch_number character varying,
  barcode character varying UNIQUE,
  location character varying,
  supplier_id uuid,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  category_id uuid NOT NULL,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT products_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT products_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT products_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_products_supplier_id FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT fk_products_created_by FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.purchase_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  purchase_id uuid NOT NULL,
  product_id uuid,
  product_name character varying NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  unit_cost integer NOT NULL DEFAULT 0,
  total_cost integer NOT NULL DEFAULT 0,
  received_quantity integer DEFAULT 0,
  expiry_date date,
  batch_number character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_items_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT purchase_items_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.purchases(id)
);
CREATE TABLE public.purchases (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  supplier_id uuid NOT NULL,
  purchase_number character varying NOT NULL UNIQUE,
  purchase_date timestamp with time zone NOT NULL DEFAULT now(),
  expected_delivery_date date,
  delivery_date date,
  subtotal integer NOT NULL DEFAULT 0,
  tax integer NOT NULL DEFAULT 0,
  discount integer NOT NULL DEFAULT 0,
  total_amount integer NOT NULL DEFAULT 0,
  payment_method character varying CHECK (payment_method::text = ANY (ARRAY['cash'::character varying, 'bank_transfer'::character varying, 'credit'::character varying, 'mobile_money'::character varying]::text[])),
  payment_status character varying DEFAULT 'pending'::character varying CHECK (payment_status::text = ANY (ARRAY['pending'::character varying, 'partial'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'ordered'::character varying, 'received'::character varying, 'cancelled'::character varying, 'returned'::character varying]::text[])),
  notes text,
  created_by uuid NOT NULL,
  received_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchases_pkey PRIMARY KEY (id),
  CONSTRAINT purchases_received_by_fkey FOREIGN KEY (received_by) REFERENCES public.users(id),
  CONSTRAINT purchases_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT purchases_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT purchases_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT purchases_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_purchases_received_by FOREIGN KEY (received_by) REFERENCES public.users(id),
  CONSTRAINT fk_purchases_created_by FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.sale_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid NOT NULL,
  product_id uuid NOT NULL,
  product_name character varying NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  unit_price integer NOT NULL DEFAULT 0,
  total_price integer NOT NULL DEFAULT 0,
  cost_price integer NOT NULL DEFAULT 0,
  discount_amount integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sale_items_pkey PRIMARY KEY (id),
  CONSTRAINT sale_items_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id),
  CONSTRAINT sale_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.sales (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  transaction_number character varying NOT NULL UNIQUE,
  customer_id uuid,
  cashier_id uuid NOT NULL,
  sale_date timestamp with time zone NOT NULL DEFAULT now(),
  subtotal integer NOT NULL DEFAULT 0,
  tax integer NOT NULL DEFAULT 0,
  discount integer NOT NULL DEFAULT 0,
  total_amount integer NOT NULL DEFAULT 0,
  payment_method character varying NOT NULL CHECK (payment_method::text = ANY (ARRAY['cash'::character varying, 'card'::character varying, 'mobile_money'::character varying, 'bank_transfer'::character varying]::text[])),
  payment_status character varying DEFAULT 'completed'::character varying CHECK (payment_status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  status character varying DEFAULT 'completed'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'cancelled'::character varying, 'refunded'::character varying]::text[])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sales_pkey PRIMARY KEY (id),
  CONSTRAINT sales_cashier_id_fkey FOREIGN KEY (cashier_id) REFERENCES public.users(id),
  CONSTRAINT sales_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT sales_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT sales_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_sales_cashier_id FOREIGN KEY (cashier_id) REFERENCES public.users(id)
);
CREATE TABLE public.settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid,
  setting_key character varying NOT NULL,
  setting_value text,
  setting_type character varying DEFAULT 'string'::character varying CHECK (setting_type::text = ANY (ARRAY['string'::character varying, 'integer'::character varying, 'boolean'::character varying, 'json'::character varying, 'decimal'::character varying]::text[])),
  description text,
  is_system boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT settings_pkey PRIMARY KEY (id),
  CONSTRAINT settings_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT settings_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id)
);
CREATE TABLE public.stock_audit_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  audit_id uuid NOT NULL,
  product_id uuid NOT NULL,
  system_stock integer NOT NULL DEFAULT 0,
  physical_count integer,
  variance integer DEFAULT (physical_count - system_stock),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'matched'::character varying, 'variance'::character varying, 'critical'::character varying]::text[])),
  notes text,
  audited_by uuid,
  audited_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_audit_items_pkey PRIMARY KEY (id),
  CONSTRAINT stock_audit_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT stock_audit_items_audited_by_fkey FOREIGN KEY (audited_by) REFERENCES public.users(id),
  CONSTRAINT stock_audit_items_audit_id_fkey FOREIGN KEY (audit_id) REFERENCES public.stock_audits(id),
  CONSTRAINT fk_stock_audit_items_audited_by FOREIGN KEY (audited_by) REFERENCES public.users(id)
);
CREATE TABLE public.stock_audits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  audit_date date NOT NULL,
  status character varying NOT NULL DEFAULT 'draft'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  total_items_audited integer DEFAULT 0,
  total_variance integer DEFAULT 0,
  estimated_value_impact integer DEFAULT 0,
  notes text,
  created_by uuid NOT NULL,
  completed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT stock_audits_pkey PRIMARY KEY (id),
  CONSTRAINT stock_audits_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES public.users(id),
  CONSTRAINT fk_stock_audits_created_by FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_stock_audits_completed_by FOREIGN KEY (completed_by) REFERENCES public.users(id),
  CONSTRAINT stock_audits_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT stock_audits_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT stock_audits_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.stock_corrections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid NOT NULL,
  audit_id uuid NOT NULL,
  audit_item_id uuid NOT NULL,
  product_id uuid NOT NULL,
  previous_quantity integer NOT NULL,
  corrected_quantity integer NOT NULL,
  variance integer NOT NULL,
  correction_reason character varying DEFAULT 'audit_correction'::character varying,
  notes text,
  corrected_by uuid NOT NULL,
  corrected_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_corrections_pkey PRIMARY KEY (id),
  CONSTRAINT stock_corrections_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT stock_corrections_corrected_by_fkey FOREIGN KEY (corrected_by) REFERENCES public.users(id),
  CONSTRAINT stock_corrections_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT stock_corrections_audit_item_id_fkey FOREIGN KEY (audit_item_id) REFERENCES public.stock_audit_items(id),
  CONSTRAINT stock_corrections_audit_id_fkey FOREIGN KEY (audit_id) REFERENCES public.stock_audits(id),
  CONSTRAINT stock_corrections_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  branch_id uuid,
  name character varying NOT NULL,
  contact_person character varying,
  email character varying,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  country character varying DEFAULT 'Uganda'::character varying,
  tax_id character varying,
  license_number character varying,
  supplier_type character varying DEFAULT 'wholesale'::character varying CHECK (supplier_type::text = ANY (ARRAY['wholesale'::character varying, 'manufacturer'::character varying, 'distributor'::character varying, 'retail'::character varying]::text[])),
  payment_terms character varying DEFAULT '30 days'::character varying,
  credit_limit integer DEFAULT 0,
  current_balance integer DEFAULT 0,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying]::text[])),
  rating integer CHECK (rating >= 1 AND rating <= 5),
  notes text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT suppliers_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT suppliers_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_suppliers_created_by FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.tenants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  country character varying DEFAULT 'Uganda'::character varying,
  timezone character varying DEFAULT 'Africa/Kampala'::character varying,
  currency character varying DEFAULT 'UGX'::character varying,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying]::text[])),
  subscription_plan character varying DEFAULT 'basic'::character varying,
  subscription_status character varying DEFAULT 'active'::character varying,
  subscription_expires_at timestamp with time zone,
  max_branches integer DEFAULT 1,
  max_users integer DEFAULT 5,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tenants_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  auth_user_id uuid,
  branch_id uuid,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  phone character varying,
  role character varying NOT NULL CHECK (role::text = ANY (ARRAY['owner'::character varying, 'manager'::character varying, 'cashier'::character varying, 'pharmacist'::character varying, 'staff'::character varying]::text[])),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying]::text[])),
  permissions jsonb DEFAULT '{}'::jsonb,
  last_login_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  subscription_status character varying DEFAULT 'active'::character varying CHECK (subscription_status::text = ANY (ARRAY['active'::character varying, 'expired'::character varying, 'cancelled'::character varying, 'trial'::character varying]::text[])),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branches(id),
  CONSTRAINT users_auth_user_id_fkey FOREIGN KEY (auth_user_id) REFERENCES auth.users(id),
  CONSTRAINT users_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);